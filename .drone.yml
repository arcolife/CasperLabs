---

#NOTE: Leaving these here to try again eventually. The Yaml library drone 1.1.0
# uses has a bug with how it handles these anchors. Workaround is to be more
# verbose in the steps.
#
#__buildenv:
#  image: "casperlabs/buildenv:latest"
#
#__sbtenv:
#  environment:
#    - "_JAVA_OPTIONS=-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
#  image: "casperlabs/buildenv:latest"
#  volumes:
#    - "/var/cache/cl-build/.sbt:/root/.sbt"
#    - "/var/cache/cl-build/.ivy2:/root/.ivy2"
#    - "/var/cache/cl-build/.coursier:/root/.coursier"

# Begin
clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
    image: "casperlabs/buildenv:latest"

kind: pipeline
name: on-tag

# Run only on tagged release version
steps:
- name: package-sbt-artifacts-tag
  commands:
  - "make build-client-contracts build-node-contracts"
  - "sbt update test client/debian:packageBin client/universal:packageZipTarball client/rpm:packageBin node/debian:packageBin node/universal:packageZipTarball node/rpm:packageBin"
  - "mkdir -p artifacts/${DRONE_BRANCH}"
  - "cp client/target/casperlabs-client_*_all.deb client/target/universal/*.tgz artifacts/${DRONE_BRANCH}"
  - "cp client/target/rpm/RPMS/noarch/casperlabs-client-*.noarch.rpm artifacts/${DRONE_BRANCH}"
  - "cp node/target/casperlabs-node_*_all.deb node/target/universal/*.tgz artifacts/${DRONE_BRANCH}"
  - "cp node/target/rpm/RPMS/noarch/casperlabs-node-*.noarch.rpm artifacts/${DRONE_BRANCH}"
  environment:
    _JAVA_OPTIONS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
  image: "casperlabs/buildenv:latest"
  volumes:
  - name: docker_sock
    path: "/var/run/docker.sock"
  when:
    ref:
    - refs/tags/v*

- name: package-ee-tag
  commands:
  - "mkdir -p artifacts/${DRONE_BRANCH}"
  - "make setup -C ./execution-engine"
  - "make cargo-package-all"
  - "cp execution-engine/target/system-contracts.tar.gz artifacts/${DRONE_BRANCH}"
  - "cp execution-engine/target/debian/casperlabs-engine-grpc-server_*.deb artifacts/${DRONE_BRANCH}"
  - "cp execution-engine/target/release/rpmbuild/RPMS/x86_64/casperlabs-engine-grpc-server-*.rpm artifacts/${DRONE_BRANCH}"
  - "WORKING_DIR=$(pwd) ; cd execution-engine/target/release/rpmbuild/SOURCES ; OS=$(uname -s | tr '[:upper:]' '[:lower:]') ; ARCH=$(uname -p) ; SOURCE=$(ls casperlabs-engine-grpc-server-*.tar.gz | sed \"s/.tar.gz//\") ; TARGET=$(ls $SOURCE*.tar.gz | sed \"s/.tar.gz/_\"$OS\"_\"$ARCH\".tar.gz/\") ; tar -xzf $SOURCE.tar.gz ; tar -czf $TARGET -C $SOURCE/usr/bin/ . && cp $TARGET $WORKING_DIR/artifacts/${DRONE_BRANCH}"
  image: "casperlabs/buildenv:latest"
  volumes:
  - name: docker_sock
    path: "/var/run/docker.sock"
  when:
    ref:
    - refs/tags/v*
  depends_on:
  - package-sbt-artifacts-tag

- name: generate-metapackages
  commands:
  - "mkdir -p artifacts/${DRONE_BRANCH}"
  - WORKING_DIR="$(pwd)/artifacts/${DRONE_BRANCH}/"
  - THIS_VERSION=$(echo casperlabs-engine-grpc-server_*_amd64.deb | sed s/casperlabs-engine-grpc-server_// | sed s/_amd64.deb//)
  - THIS_VERSION_MAJOR=$(echo "$THIS_VERSION" | cut -d '.' -f 1)
  - THIS_VERSION_MINOR=$(echo "$THIS_VERSION" | cut -d '.' -f 2,3)
  - cd /opt/bintray/artifacts
  - sed -i s/THIS_VERSION_MAJOR/$THIS_VERSION_MAJOR/ rpmbuild/SPECS/casperlabs-all.spec
  - sed -i s/THIS_VERSION_MINOR/$THIS_VERSION_MINOR/ rpmbuild/SPECS/casperlabs-all.spec
  - sed -i s/THIS_VERSION/$THIS_VERSION/ rpmbuild/SPECS/casperlabs-all.spec
  - rpmbuild -bb rpmbuild/SPECS/casperlabs-all.spec -D "_topdir $(pwd)/rpmbuild"  -D "SRC $(pwd)"
  - sed -i s/THIS_VERSION/$THIS_VERSION/ deb_build/casperlabs-all.cfg
  - equivs-build  deb_build/casperlabs_all.cfg
  - cp /opt/bintray/artifacts/casperlabs_*_all.deb $WORKING_DIR/
  - cp /opt/bintray/artifacts/rpmbuild/RPMS/x86_64/casperlabs-*.rpm $WORKING_DIR/
  image: "arcolife/buildenv:bintray"
  volumes:
  - name: docker_sock
    path: "/var/run/docker.sock"
  when:
    ref:
    - refs/tags/v*
  depends_on:
  - package-ee-tag

- name: github_publish_release_artifacts
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    - md5
    files:
    - "artifacts/${DRONE_BRANCH}/*"
    prerelease:
    - true
  image: plugins/github-release
  when:
    ref:
    - refs/tags/v*
  depends_on:
  - generate-metapackages

- name: bintray_publish_artifacts
  image: "arcolife/buildenv:bintray"
  commands:
    - "mkdir -p artifacts/${DRONE_BRANCH}"
    - TARGET="$(pwd)/artifacts/${DRONE_BRANCH}/"
    - THIS_VERSION=$(echo casperlabs-engine-grpc-server_*_amd64.deb | sed s/casperlabs-engine-grpc-server_// | sed s/_amd64.deb//)
    - sed -i s#/opt/bintray/artifacts/#$TARGET#g /opt/bintray/package_config.yaml
    - sed -i s/THIS_VERSION/$THIS_VERSION/ /opt/bintray/package_config.yaml
    - cd /opt/bintray && ./bintray
  environment:
    PLUGIN_BINTRAY_USERNAME:
      from_secret: bintray_username
    PLUGIN_BINTRAY_API_KEY:
      from_secret: bintray_api_key
    PLUGIN_BINTRAY_GPG_PASSPHRASE:
      from_secret: bintray_gpg_passphrase
    PLUGIN_BINTRAY_CFG: /opt/bintray/package_config.yaml
  when:
    ref:
    - refs/tags/v*
  depends_on:
  - github_publish_release_artifacts

volumes:
- name: docker_sock
  host:
    path: "/var/run/docker.sock"

trigger:
  ref:
  - refs/tags/v*

# Signature for Drone
---
kind: signature
hmac: aba74ddcedb4ac74f39f8884cd644c6f13eb4ed7f7226c7b9fefda17d0241af2
